>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 26, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix_divided([[1.2, 2.3, 3.4], [4, 5, 6], [-8, -7.7, 0]], 2.4)
[[0.5, 0.96, 1.42], [1.67, 2.08, 2.5], [-3.33, -3.21, 0.0]]
>>> matrix_divided([], 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 30, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5], [2]], 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 37, in matrix_divided
    raise TypeError(msg_s)
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([["Hello"], ["world"], ["Hello"], ["Kevin"]], 10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 41, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([["1", "2"], ["3", "4"]], 9)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 41, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([['1', 2, 3], [4, '5', 6]], 6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 41, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [], [4, 5, 5]], 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 35, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], (4, 5, 6), [7, 8, 9]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 35, in matrix_divided
    raise TypeError(msg_t)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], [1])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
