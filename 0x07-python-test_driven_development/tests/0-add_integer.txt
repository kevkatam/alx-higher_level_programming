The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(100, -2)
98
>>> add_integer(2)
100
>>> add_integer(100.3, 2)
102
>>> add_integer(100.3, -2)
98
>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(100, -2)
98
>>> add_integer(2.1, 98)
100
>>> add_integer(1, '1')
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer('2', '1')
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer((1, 2))
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(4, [])
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer("hello")
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(3.2, 3.2)
6
>>> add_integer(-1)
97
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
    a = int(a)
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('inf'), float('-inf'))
Traceback (most recent call last):
    a = int(a)
OverflowError: cannot convert float infinity to integer
>>> add_integer(0, float('nan'))
Traceback (most recent call last):
    b = int(b)
ValueError: cannot convert float NaN to integer
